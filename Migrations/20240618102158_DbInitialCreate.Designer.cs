// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PropertyInventorySystem.Data;

#nullable disable

namespace PropertyInventorySystem.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240618102158_DbInitialCreate")]
    partial class DbInitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PropertyInventorySystem.Models.Contact", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Contacts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3a4f1489-0875-40ca-a0b6-c7a71a0826f3"),
                            Email = "john.doe@example.com",
                            FirstName = "John",
                            LastName = "Doe",
                            PhoneNumber = "123456789"
                        },
                        new
                        {
                            Id = new Guid("e258c989-1687-4c83-8a36-c1dd3474a00d"),
                            Email = "jane.smith@example.com",
                            FirstName = "Jane",
                            LastName = "Smith",
                            PhoneNumber = "987654321"
                        });
                });

            modelBuilder.Entity("PropertyInventorySystem.Models.Property", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfRegistration")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Properties");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c8a9599b-ce6f-47de-81be-46ca95a385f7"),
                            Address = "123 Main St",
                            DateOfRegistration = new DateTime(2024, 6, 18, 12, 21, 57, 553, DateTimeKind.Local).AddTicks(1961),
                            Name = "Maisonette",
                            Price = 130000m
                        },
                        new
                        {
                            Id = new Guid("b0eae24d-e426-4914-a662-b3650804e662"),
                            Address = "456 Elm St",
                            DateOfRegistration = new DateTime(2024, 6, 18, 12, 21, 57, 553, DateTimeKind.Local).AddTicks(2054),
                            Name = "Penthouse",
                            Price = 430000m
                        });
                });

            modelBuilder.Entity("PropertyInventorySystem.Models.SoldProperty", b =>
                {
                    b.Property<Guid>("PropertyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<decimal>("AcquisitionPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("ContactId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateOfRegistration")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EffectiveTill")
                        .HasColumnType("datetime2");

                    b.HasKey("PropertyId");

                    b.HasIndex("ContactId");

                    b.ToTable("SoldProperties");
                });

            modelBuilder.Entity("PropertyInventorySystem.Models.SoldProperty", b =>
                {
                    b.HasOne("PropertyInventorySystem.Models.Contact", "Contact")
                        .WithMany()
                        .HasForeignKey("ContactId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PropertyInventorySystem.Models.Property", "Property")
                        .WithMany("SoldProperties")
                        .HasForeignKey("PropertyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contact");

                    b.Navigation("Property");
                });

            modelBuilder.Entity("PropertyInventorySystem.Models.Property", b =>
                {
                    b.Navigation("SoldProperties");
                });
#pragma warning restore 612, 618
        }
    }
}
